Integre ao meu sistema dois agentes distintos, ambos com interface no painel, mem√≥ria persistente e controle total via frontend. Mantenha a est√©tica futurista j√° implementada (tema escuro, glassmorfismo, anima√ß√µes) e conecte tudo ao backend atual (Express.js + PostgreSQL).

### 1. AGENTE SDK OFICIAL OPENAI
- Clone e integre o reposit√≥rio: https://github.com/openai/openai-agents-python.git
- Implemente bot√£o "Ativar Agente OpenAI" no painel de admin
- Campo para definir o objetivo do agente
- Execu√ß√£o cont√≠nua com base no objetivo fornecido
- Interface de exibi√ß√£o com:
  - üß† Pensamento
  - üõ†Ô∏è A√ß√£o
  - üìÑ Observa√ß√£o
  - ‚úÖ Conclus√£o
- Armazenar hist√≥rico das execu√ß√µes e objetivos no banco PostgreSQL
- Rodar com a API OpenAI oficial (`gpt-4o` ou `gpt-3.5`, configur√°vel via painel)
- Tornar plug√°vel (adicionar mais ferramentas depois)

### 2. AGENTE MISTRAL LOCAL (via Ollama)
- Criar m√≥dulo separado com bot√£o "Ativar Agente Mistral"
- Executa com modelo local via Ollama (`http://localhost:11434/api/generate`)
- Deve simular o comportamento do agente SDK (pensar > agir > observar)
- Tamb√©m pode usar ferramentas definidas (como scraping, PDF, comandos)
- Mem√≥ria persistente salva no PostgreSQL
- Fallback autom√°tico: se o Ollama local estiver offline, usar o servidor na Oracle Cloud
- Permitir definir objetivo e contexto inicial no painel

### 3. INTERFACE DE CONTROLE UNIFICADA
- Painel "Agentes Aut√¥nomos" com:
  - Seletor: `Agente OpenAI` | `Agente Mistral`
  - Campo de objetivo
  - Bot√£o Executar
  - Log visual em tempo real das a√ß√µes e respostas
  - Hist√≥rico de execu√ß√µes por agente

### 4. CONFIGURA√á√ÉO E CONECTORES
- Permitir editar no painel as seguintes vari√°veis:
  - API Key OpenAI
  - URL do modelo Oll
- URL do modelo Ollama (local e nuvem)
- URL do servidor Oracle Cloud (para fallback)
- Prompt base dos agentes
- Contexto inicial customizado
- Chave do Apify (para ferramentas de scraping)
- Ativa√ß√£o/desativa√ß√£o de logs detalhados
- Ativa√ß√£o de ferramentas customizadas por agente (via toggle)

Essas configura√ß√µes devem ser salvas no banco PostgreSQL e edit√°veis via painel visual, com valida√ß√£o de campos e bot√£o de teste de conectividade (ping API).
